@page "/mapRoutes"
@using GoogleMapsComponents
@using GoogleMapsComponents.Maps

<h1>Google Map routes</h1>

<GoogleMap @ref="@map1" Id="map1" Options="@mapOptions" OnAfterInit="@(async () => await OnAfterInitAsync())"></GoogleMap>
<button @onclick="@(_ => AddDirections())">Add Direction</button>
<button @onclick="@( _distanceTotalString => RemoveRoute())">Remove route</button>

<p>
    Duration: @_durationTotalString <br />
    Distance: @_distanceTotalString <br />
</p>

@code {
    private GoogleMap map1 = default!;
    private MapOptions mapOptions = default!;
    private DirectionsService dirService = default!;
    private DirectionsRenderer dirRend = default!;
    private string? _durationTotalString = default;
    private string? _distanceTotalString = default;

    protected override void OnInitialized()
    {
        mapOptions = new MapOptions()
        {
            Zoom = 13,
            Center = new LatLngLiteral()
            {
                Lat = 40.603629,
                Lng = -75.472518
            },
            MapTypeId = MapTypeId.Roadmap
        };
    }

    private async Task OnAfterInitAsync()
    {
        dirService = await DirectionsService.CreateAsync(
            map1.JsRuntime);

        dirRend = await DirectionsRenderer.CreateAsync(
            map1.JsRuntime,
            new DirectionsRendererOptions()
            {
                Map = map1.InteropObject
            });
    }

    private async Task RemoveRoute()
    {
        await dirRend.SetMap(null);
    }

    private async Task AddDirections()
    {
        //Adding a waypoint
        var waypoints = new List<DirectionsWaypoint>();
        waypoints.Add(new DirectionsWaypoint() { Location = "Bethlehem, PA", Stopover = true });

        //Direction Request
        DirectionsRequest dr = new DirectionsRequest();
        dr.Origin = "Allentown, PA";
        dr.Destination = "Bronx, NY";
        dr.Waypoints = waypoints;
        dr.TravelMode = TravelMode.Driving;

        //Calculate Route
        var directionsResult = await dirService.Route(dr);

        await map1.JsRuntime.InvokeVoidAsync(
            "googleMapsObjectManager.dir",
            directionsResult);

        await dirRend.SetDirections(directionsResult.Reference);

        foreach (var route in directionsResult.Value.Routes.SelectMany(x => x.Legs))
        {
            _durationTotalString += route?.Duration?.Text + ", ";
            _distanceTotalString += route?.Distance?.Text + ", ";
        }
    }
}
